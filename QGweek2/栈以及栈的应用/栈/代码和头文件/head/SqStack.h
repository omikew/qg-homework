#ifndef STACK_H_INCLUDED
#define STACK_H_INCLUDED

typedef enum Status 
{
	ERROR = 0, SUCCESS = 1
} Status;

typedef int ElemType;

typedef struct SqStack 
{
	ElemType *elem;
	int top;
	int size;
} SqStack;


//基于数组的顺序栈
Status initStack(SqStack **s,int sizes);//初始化栈
Status isEmptyStack(SqStack *s);//判断栈是否为空
Status getTopStack(SqStack *s,ElemType *e); //得到栈顶元素
Status clearStack(SqStack *s);//清空栈
Status destroyStack(SqStack **s);//销毁栈
Status stackLength(SqStack *s,int *length);//检测栈长度
Status pushStack(SqStack *s,ElemType data);//入栈
Status popStack(SqStack *s,ElemType *data);//出栈

Status getTop(SqStack*s);
Status getLength(SqStack*s);
Status Pop(SqStack*s);
Status Push(SqStack*s);
void Print(SqStack*s);
Status Scan(ElemType*data);
Status Init(SqStack**s);
#endif 
#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
